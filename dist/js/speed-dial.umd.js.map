{"version":3,"file":"speed-dial.umd.js","sources":["../../sources/js/util/functoins.js","../../sources/js/util/defaults.js","../../sources/js/index.js"],"sourcesContent":["/**\r\n * Creates a modal div\r\n *\r\n * @param {HTMLElement} speedDial\r\n */\r\nconst createModal = (speedDial) => {\r\n  const modal = document.createElement(\"div\");\r\n  modal.className = \"speed-dial__modal\";\r\n  speedDial.insertAdjacentElement(\"afterend\", modal);\r\n};\r\n\r\n/**\r\n * svg element width class and symbol\r\n *\r\n * @param {String} classname\r\n * @param {String} symbol\r\n * @returns SVGElement\r\n */\r\nconst svgUse = (classname, symbol) =>\r\n  `<svg class=\"icon ${classname}\"><use xlink:href=\"#${symbol}\"></use></svg>`;\r\n\r\n/**\r\n * Create style depending on position and direction\r\n *\r\n * @param {String} position\r\n * @param {String} direction\r\n * @param {Object} options\r\n * @returns String\r\n */\r\nconst tipPosition = (position, direction, { sPos }) => {\r\n  const type = position.split(\"-\")[1] === \"left\" ? \"left\" : \"right\";\r\n\r\n  let style;\r\n  if (position === \"top-left\" || position === \"top-right\") {\r\n    style = direction === \"bottom\" ? `${type}: ${sPos}px` : `top: ${sPos}px`;\r\n  } else {\r\n    style = direction === \"top\" ? `${type}: ${sPos}px` : `bottom: ${sPos}px`;\r\n  }\r\n\r\n  return style;\r\n};\r\n\r\n/**\r\n * Create big button\r\n *\r\n * @param {Object} object\r\n * @param {String} root\r\n * @returns HTMLElement\r\n */\r\nconst buttonBig = ({ icons, bgColor }, root) => {\r\n  const button = document.createElement(\"button\");\r\n  button.className = root;\r\n  button.style.fill = icons.iconBig.color || bgColor;\r\n  button.setAttribute(\r\n    \"aria-label\",\r\n    icons.iconBig.ariaLabel || \"show social buttons\"\r\n  );\r\n\r\n  const svgBig = svgUse(\"icon__plus\", icons.iconBig.symbol);\r\n  button.insertAdjacentHTML(\"beforeend\", svgBig);\r\n\r\n  return button;\r\n};\r\n\r\n/**\r\n * Create small button\r\n *\r\n * @param {Object} options\r\n * @returns HTMLElement\r\n */\r\nconst buttonsSmall = (options) => {\r\n  const { data, icons, steps } = options;\r\n\r\n  const container = document.createElement(\"div\");\r\n  container.className = \"speed-dial__action\";\r\n  container.setAttribute(\"data-direction\", data.direction);\r\n\r\n  const elements = icons.iconsSmall;\r\n  const sortIcon = elements.sort((a, b) => a.id - b.id);\r\n  let stepTrans = steps * sortIcon.length + 50;\r\n\r\n  elements.map((element) => {\r\n    const { symbol, className, ariaLabel, target, url } = element;\r\n    const small = document.createElement(\"button\");\r\n    small.classList.add(\"speed-dial__item\", symbol);\r\n    if (ariaLabel) {\r\n      small.ariaLabel = ariaLabel;\r\n    }\r\n    small.style = `transition-delay: ${stepTrans}ms`;\r\n\r\n    let link;\r\n    if (url) {\r\n      link = document.createElement(\"a\");\r\n    } else {\r\n      link = document.createElement(\"div\");\r\n    }\r\n\r\n    link.className = \"speed-dial__button--small\";\r\n    if (className) {\r\n      link.classList.add(className);\r\n    }\r\n\r\n    if (url) {\r\n      link.href = url;\r\n      link.rel = \"noopener\";\r\n    }\r\n    if (target) {\r\n      link.target = target;\r\n    }\r\n\r\n    container.appendChild(small);\r\n\r\n    const smallIcon = svgUse(\"icon__small\", symbol);\r\n    link.insertAdjacentHTML(\"beforeend\", smallIcon);\r\n\r\n    if (element.tooltipText) {\r\n      const span = document.createElement(\"span\");\r\n      span.textContent = element.tooltipText;\r\n      span.style = tipPosition(data.position, data.direction, options);\r\n\r\n      link.insertAdjacentElement(\"beforeend\", span);\r\n    }\r\n\r\n    small.appendChild(link);\r\n\r\n    stepTrans -= steps;\r\n  });\r\n\r\n  return container;\r\n};\r\nexport { createModal, svgUse, buttonBig, buttonsSmall };\r\n","export default {\r\n  sPos: 60,\r\n  steps: 50,\r\n  stepTrans: 100,\r\n  modal: false,\r\n  position: null,\r\n  showTopBtn: true,\r\n  visibility: false,\r\n  data: {\r\n    position: \"bottom-right\",\r\n    direction: \"top\",\r\n  },\r\n  bgColor: \"#cacaca\",\r\n  topBtn: \".speed-dial__top\",\r\n};\r\n","import { createModal, svgUse, buttonBig, buttonsSmall } from \"./util/functoins\";\r\nimport defaultOptions from \"./util/defaults\";\r\n\r\nexport default class SpeedDial {\r\n  /**\r\n   * constructor\r\n   * @param {Object} config\r\n   */\r\n  constructor(config) {\r\n    this.top = \"speed-dial__top-container\";\r\n\r\n    const options = { ...defaultOptions, ...config };\r\n    const root = \"speed-dial__button-root\";\r\n    const active = \"speed-dial__active\";\r\n\r\n    const speed = document.createElement(\"div\");\r\n    speed.setAttribute(\"data-position\", options.data.position);\r\n    speed.className = \"speed-dial\";\r\n\r\n    document.body.insertAdjacentElement(\"beforeend\", speed);\r\n\r\n    this.options = options;\r\n    this.speedDial = speed;\r\n\r\n    this.initial(options, speed, active, root);\r\n\r\n    if (!options.showTopBtn) return;\r\n    if (options.position) {\r\n      [\"scroll\", \"load\"].map((type) => {\r\n        window.addEventListener(type, this.showScrollButton);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize speed dial\r\n   * @param {Object} options\r\n   * @param {HTMLElement} speed\r\n   * @param {String} active\r\n   * @param {String} root\r\n   */\r\n  initial = (options, speed, active, root) => {\r\n    const { modal, visibility } = options;\r\n    speed.appendChild(buttonBig(options, root));\r\n    speed.appendChild(buttonsSmall(options));\r\n\r\n    if (options.showTopBtn) {\r\n      speed.insertAdjacentElement(\"afterend\", this.buttonTop(options));\r\n    }\r\n\r\n    if (modal) {\r\n      createModal(speed);\r\n    }\r\n\r\n    if (visibility) {\r\n      speed.classList.add(active);\r\n\r\n      speed.addEventListener(\"click\", (event) => {\r\n        if (event.target.className !== root) return;\r\n        speed.classList.toggle(active);\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create button to scroll to top\r\n   *\r\n   * @param {Object} options\r\n   * @returns HTMLElement\r\n   */\r\n  buttonTop = (options) => {\r\n    const { data, icons, bgColor } = options;\r\n    const buttonTop = document.createElement(\"button\");\r\n    buttonTop.classList.add(\"speed-dial__top\");\r\n    buttonTop.setAttribute(\"data-position\", data.position);\r\n    buttonTop.ariaLabel = icons.iconTop.ariaLabel || \"scroll to top\";\r\n\r\n    const divEl = document.createElement(\"div\");\r\n    divEl.className = this.top;\r\n    divEl.style = `background-color:${icons.iconTop.color || bgColor};`;\r\n\r\n    const topIcon = svgUse(\"icon__top\", icons.iconTop.symbol);\r\n    divEl.insertAdjacentHTML(\"beforeend\", topIcon);\r\n\r\n    buttonTop.appendChild(divEl);\r\n\r\n    buttonTop.addEventListener(\"click\", this.handleEvent);\r\n\r\n    return buttonTop;\r\n  };\r\n\r\n  /**\r\n   * Show button to scroll to top\r\n   */\r\n  showScrollButton = () => {\r\n    const { data, position, topBtn } = this.options;\r\n    const buttonTop = document.querySelector(topBtn);\r\n    const scrollCheck = window.pageYOffset > position ? true : false;\r\n\r\n    if (data.position == \"top-right\" || data.position == \"top-left\") return;\r\n    buttonTop?.classList[scrollCheck ? \"add\" : \"remove\"](\"speed-dial__show\");\r\n    this.speedDial.classList[scrollCheck ? \"add\" : \"remove\"](\"margin-bottom\");\r\n  };\r\n\r\n  /**\r\n   * Event handler\r\n   * @param {Event} event\r\n   */\r\n  handleEvent = (event) => {\r\n    event.stopPropagation();\r\n    const button = event.target;\r\n    if (button.className !== this.top) return;\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n}\r\n"],"names":["svgUse","classname","symbol","sPos","steps","stepTrans","modal","position","showTopBtn","visibility","data","direction","bgColor","topBtn","constructor","config","initial","options","speed","active","root","appendChild","icons","button","document","createElement","className","style","fill","iconBig","color","setAttribute","ariaLabel","svgBig","insertAdjacentHTML","buttonBig","container","elements","iconsSmall","sortIcon","sort","a","b","id","length","map","element","target","url","small","link","classList","add","href","rel","smallIcon","tooltipText","span","textContent","type","split","tipPosition","insertAdjacentElement","buttonsSmall","this","buttonTop","speedDial","createModal","addEventListener","event","toggle","iconTop","divEl","top","topIcon","handleEvent","showScrollButton","querySelector","scrollCheck","window","pageYOffset","stopPropagation","scrollTo","behavior","defaultOptions","body"],"mappings":"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"}